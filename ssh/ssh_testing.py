# author Sydney Nguyen

import math

n = 0x00b83a9c6cbb3e59082e5a27a1ea76a792baabe438e20cfd0807550d5b565de927e78823d18a441c9917768e077bf216c6b0543cce4f2f8b0ae7b7885c08fb6099fd1d29363c85faf115a0b49d9f9cda63ded9936c3f951a6f3da4607234820b844106bc7d31d025e6c2a46cf5bc2d3920bcbca4c57c2ea313846eda73d83755b4eba9dbdc7d146219cc12aabfca6a9190a7db8374fb4a0ebd47dc94d76aaac3ad0a055b39ebf670351fe6b5884e45f0c1ae5c116d5ad6403791bb5b81b6e4f6107a4f9ea4cf67f5829f4db26038b65762bffb2e6956f21e3be8744a81e848fd043e95297ab59ec47ed3d1209e422ecd2105eae94176b06115f0edf41f8baa6bf2edccac32cfdf0f4317c673c807dfd31e6ffcb22f73aff90ae9b262c6dac77f24ffe11d33deb89c507969a1ee72dbe9ec87f7c43b9934c7acc02c0b647e35bce9079df4065cc1a8e40a43bfbffe001e79b1ed37b4c0b318933a1c5f7b3908aa002b0e921bead5d855b606cdf42c491d113269d6fb99e2fb9c9cb5712d94d0b8df
e = 65537
d = 0x7be9702cf2040d7e232f2059178a974b69a313edee9d2dd3a89adc5102d6476c3f9ea1f8de36d1c566b2a6f501b8e2f8e0c0c7e53bfd8e57d762eaa47ca617637b8b919c9938c480433bc440008b4f98bcdb3afd2406f5b0bc9543098da7aa775a055de2170f196f0c9beb6d9d140dc8a7297aea198c84c32be023aea74f10a68f9bbff59d6b885031a29c96435f4a69317dc3fd7ac765028ac3229981753a07b925c126443f8d592e0bcf2dcef7dbe7698f23699a1f6131ff23357919bb06850a812c83a195183464b787a3d6d4ce3fa97cbba4fc166e3e6a26fcc43e3e6876dfb2efbfd0d9c5f4edd4a53075e32cb2410e9b3c3b354c159bf0beab950d543afbc07e995c163285ffa11460bb089cc4e2a6f98a9660220c930639251805030b58e10c16650010100b24d154c74d70477adc701c927fee6bf2b1100f33037d0c593fb4374b095f7f58df87596f0efda809feb563824b82b6017ceb7c832eaa138273b963e686368b39d2b2fe39935da61c92bbd8be37024029b039f44c541b01
p = 0x00df05d4023699b58ca2febf4626de5c6107a0be4ef48cbff708a17eb3c8d2060ddac4a5cf1692ae0a86c0a0cd12a6171544c87c9712f0bb2eb2ab2b7d832d927bb2dcbe097dccfe9d22579f65c225d006d67e631622020e7e7bc71e6d06c3afda0d1865515c723f9a099dd14b9c31c8a64bccee5e9fde80c1017fb8c20358bd56bcf3f5d08ba71efbf6ea0118ccece0ceb725fae297643f208b002dca7380bda7274da517fa76ba646a855f01393097680f4a3ada4d15e25ca8b0ad40fb44d859
q = 0x00d3784dffb73bbf7cd54e0aa3530651ad4d53ff19989899e5949e414946030d537346874743177a4290d785451684542ae57642f93e3303c8b7dbdb84765cd495e502bbbd8fddc20ef2b2741b30c3d105937a3e15c9dbad84982ea85cb3b6576bddcdfc6b0142fcd10a4c1158d2902924e77e1f67b0f89b399b61519c6c12b4f4c09adc882666f3c974a5798f5dd08ac09602fd6f6f0152cb96011416283df92887915fbacf53553907501c3e3c7eb1be5b62000c25f6131348048eeeb35473f7

if n == p * q:
    print("Test 1: pass")
else: 
    print("Test 1: fails")

lam = math.lcm( p - 1 , q - 1 )
test2 = math.gcd(e, lam) 
if test2 == 1:
  print("Test 2: pass")
else:
  print("Test 2: fail")

test3 = (e * d) % lam
if test3 == 1:
  print("Test 3: pass")
else:
    print("Test 3: fail")
